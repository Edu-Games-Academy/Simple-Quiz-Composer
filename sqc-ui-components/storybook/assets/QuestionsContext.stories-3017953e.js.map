{"version":3,"file":"QuestionsContext.stories-3017953e.js","sources":["../../__tests__/_common/utils.ts","../../src/reducers/questionReducer.ts","../../src/components/contexts/QuestionsContext.tsx"],"sourcesContent":["/**\n * random from 0 to n-1\n */\nexport const getRandomNumber = (n: number) => {\n  return Math.floor(Math.random() * n)\n}\n","import update from 'immutability-helper'\nimport { useReducer } from 'react'\n\nimport { createQuestion, Question } from 'sqc-core-functions'\n\nexport enum QuestionsActions {\n  /** Add an empty question to the end of the list */\n  ADD = 'add',\n  /** Remove the question at specified index */\n  REMOVE = 'remove',\n  /** Update the question at specified index */\n  UPDATE = 'update',\n  /** Replace the whole question list */\n  REPLACE = 'replace',\n}\n\n/**\n * Initial question list when first loading the page.\n * Containing an empty question\n */\nexport const initialQuestions = [createQuestion()]\n\n/**\n * Dispatch event for question store.\n * @see {@link QuestionsActions}\n */\nexport type QuestionDispatchAction =\n  | {\n      type: QuestionsActions.ADD\n    }\n  | {\n      type: QuestionsActions.REMOVE\n      index: number\n    }\n  | {\n      type: QuestionsActions.UPDATE\n      index: number\n      question: Question\n    }\n  | {\n      type: QuestionsActions.REPLACE\n      questions: Question[]\n    }\n\nconst questionsReducer = (state: Question[], action: QuestionDispatchAction) => {\n  switch (action.type) {\n    case QuestionsActions.ADD:\n      return update(state, { $push: [createQuestion()] })\n    case QuestionsActions.REMOVE:\n      return update(state, { $splice: [[action.index, 1]] })\n    case QuestionsActions.UPDATE:\n      return update(state, { [action.index]: { $set: action.question } })\n    case QuestionsActions.REPLACE:\n      return update(state, { $set: action.questions })\n  }\n}\n\n/**\n * Hook returns current question store and a dispatcher\n */\nexport const useQuestionReducer = () => {\n  const [questions, questionsDispatch] = useReducer(questionsReducer, initialQuestions)\n  return { questions, questionsDispatch }\n}\n","import { ReactNode, createContext, useContext, useState } from 'react'\n\nimport { QuestionDispatchAction, useQuestionReducer } from '../../reducers/questionReducer'\nimport { Question } from 'sqc-core-functions'\n\nexport type QuestionsContextProps = {\n  questions: Question[]\n  questionsDispatch: React.Dispatch<QuestionDispatchAction>\n  selectedQuestion: number\n  setSelectedQuestion: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst QuestionsContext = createContext({} as QuestionsContextProps)\n\n/**\n * Hook to access question context\n */\nconst useQuestionsContext = () => useContext(QuestionsContext)\n\n/**\n * Provider element to wrap the other elements to access question context\n * @see {@link useQuestionsContext}\n */\nfunction QuestionsProvider({ children }: { children: ReactNode }) {\n  const { questions, questionsDispatch } = useQuestionReducer()\n  const [selectedQuestion, setSelectedQuestion] = useState(0)\n\n  return (\n    <QuestionsContext.Provider\n      value={{\n        questions,\n        questionsDispatch,\n        selectedQuestion,\n        setSelectedQuestion,\n      }}\n    >\n      {children}\n    </QuestionsContext.Provider>\n  )\n}\n\nexport { useQuestionsContext, QuestionsProvider }\n"],"names":["getRandomNumber","n","QuestionsActions","initialQuestions","createQuestion","questionsReducer","state","action","update","useQuestionReducer","questions","questionsDispatch","useReducer","QuestionsContext","createContext","useQuestionsContext","useContext","QuestionsProvider","children","selectedQuestion","setSelectedQuestion","useState","jsx"],"mappings":"4OAGa,MAAAA,EAAmBC,GACvB,KAAK,MAAM,KAAK,SAAWA,CAAC,ECCzB,IAAAC,GAAAA,IAEVA,EAAA,IAAM,MAENA,EAAA,OAAS,SAETA,EAAA,OAAS,SAETA,EAAA,QAAU,UARAA,IAAAA,GAAA,CAAA,CAAA,EAeC,MAAAC,EAAmB,CAACC,EAAA,CAAgB,EAwB3CC,EAAmB,CAACC,EAAmBC,IAAmC,CAC9E,OAAQA,EAAO,KAAM,CACnB,IAAK,MACI,OAAAC,EAAOF,EAAO,CAAE,MAAO,CAACF,EAAe,CAAC,EAAG,EACpD,IAAK,SACI,OAAAI,EAAOF,EAAO,CAAE,QAAS,CAAC,CAACC,EAAO,MAAO,CAAC,CAAC,CAAA,CAAG,EACvD,IAAK,SACH,OAAOC,EAAOF,EAAO,CAAE,CAACC,EAAO,KAAK,EAAG,CAAE,KAAMA,EAAO,QAAS,CAAA,CAAG,EACpE,IAAK,UACH,OAAOC,EAAOF,EAAO,CAAE,KAAMC,EAAO,UAAW,CACnD,CACF,EAKaE,EAAqB,IAAM,CACtC,KAAM,CAACC,EAAWC,CAAiB,EAAIC,EAAAA,WAAWP,EAAkBF,CAAgB,EAC7E,MAAA,CAAE,UAAAO,EAAW,kBAAAC,EACtB,ECnDAE,EAAAC,EAAAA,cAAA,CAAA,CAAA,EAKAC,EAAA,IAAAC,aAAAH,CAAA,EAMA,SAAAI,EAAA,CAAA,SAAAC,GAAA,CACE,KAAA,CAAA,UAAAR,EAAA,kBAAAC,CAAA,EAAAF,EAAA,EACA,CAAAU,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,EAEA,OAAAC,EACET,EAAA,SAAkB,CAAjB,MAAA,CACQ,UAAAH,EACL,kBAAAC,EACA,iBAAAQ,EACA,oBAAAC,CACA,EACF,SAAAF,CAEC,CAAA,CAGP;;"}