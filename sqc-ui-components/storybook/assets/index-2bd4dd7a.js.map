{"version":3,"file":"index-2bd4dd7a.js","sources":["../../node_modules/immutability-helper/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction stringifiable(obj) {\n    // Safely stringify Object.create(null)\n    /* istanbul ignore next */\n    return typeof obj === 'object' && !('toString' in obj) ?\n        Object.prototype.toString.call(obj).slice(8, -1) :\n        obj;\n}\nvar isProduction = typeof process === 'object' && process.env.NODE_ENV === 'production';\nfunction invariant(condition, message) {\n    if (!condition) {\n        /* istanbul ignore next */\n        if (isProduction) {\n            throw new Error('Invariant failed');\n        }\n        throw new Error(message());\n    }\n}\nexports.invariant = invariant;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar splice = Array.prototype.splice;\nvar toString = Object.prototype.toString;\nfunction type(obj) {\n    return toString.call(obj).slice(8, -1);\n}\nvar assign = Object.assign || /* istanbul ignore next */ (function (target, source) {\n    getAllKeys(source).forEach(function (key) {\n        if (hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    });\n    return target;\n});\nvar getAllKeys = typeof Object.getOwnPropertySymbols === 'function'\n    ? function (obj) { return Object.keys(obj).concat(Object.getOwnPropertySymbols(obj)); }\n    /* istanbul ignore next */\n    : function (obj) { return Object.keys(obj); };\nfunction copy(object) {\n    return Array.isArray(object)\n        ? assign(object.constructor(object.length), object)\n        : (type(object) === 'Map')\n            ? new Map(object)\n            : (type(object) === 'Set')\n                ? new Set(object)\n                : (object && typeof object === 'object')\n                    ? assign(Object.create(Object.getPrototypeOf(object)), object)\n                    /* istanbul ignore next */\n                    : object;\n}\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.commands = assign({}, defaultCommands);\n        this.update = this.update.bind(this);\n        // Deprecated: update.extend, update.isEquals and update.newContext\n        this.update.extend = this.extend = this.extend.bind(this);\n        this.update.isEquals = function (x, y) { return x === y; };\n        this.update.newContext = function () { return new Context().update; };\n    }\n    Object.defineProperty(Context.prototype, \"isEquals\", {\n        get: function () {\n            return this.update.isEquals;\n        },\n        set: function (value) {\n            this.update.isEquals = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Context.prototype.extend = function (directive, fn) {\n        this.commands[directive] = fn;\n    };\n    Context.prototype.update = function (object, $spec) {\n        var _this = this;\n        var spec = (typeof $spec === 'function') ? { $apply: $spec } : $spec;\n        if (!(Array.isArray(object) && Array.isArray(spec))) {\n            invariant(!Array.isArray(spec), function () { return \"update(): You provided an invalid spec to update(). The spec may \" +\n                \"not contain an array except as the value of $set, $push, $unshift, \" +\n                \"$splice or any custom command allowing an array value.\"; });\n        }\n        invariant(typeof spec === 'object' && spec !== null, function () { return \"update(): You provided an invalid spec to update(). The spec and \" +\n            \"every included key path must be plain objects containing one of the \" +\n            (\"following commands: \" + Object.keys(_this.commands).join(', ') + \".\"); });\n        var nextObject = object;\n        getAllKeys(spec).forEach(function (key) {\n            if (hasOwnProperty.call(_this.commands, key)) {\n                var objectWasNextObject = object === nextObject;\n                nextObject = _this.commands[key](spec[key], nextObject, spec, object);\n                if (objectWasNextObject && _this.isEquals(nextObject, object)) {\n                    nextObject = object;\n                }\n            }\n            else {\n                var nextValueForKey = type(object) === 'Map'\n                    ? _this.update(object.get(key), spec[key])\n                    : _this.update(object[key], spec[key]);\n                var nextObjectValue = type(nextObject) === 'Map'\n                    ? nextObject.get(key)\n                    : nextObject[key];\n                if (!_this.isEquals(nextValueForKey, nextObjectValue)\n                    || typeof nextValueForKey === 'undefined'\n                        && !hasOwnProperty.call(object, key)) {\n                    if (nextObject === object) {\n                        nextObject = copy(object);\n                    }\n                    if (type(nextObject) === 'Map') {\n                        nextObject.set(key, nextValueForKey);\n                    }\n                    else {\n                        nextObject[key] = nextValueForKey;\n                    }\n                }\n            }\n        });\n        return nextObject;\n    };\n    return Context;\n}());\nexports.Context = Context;\nvar defaultCommands = {\n    $push: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$push');\n        return value.length ? nextObject.concat(value) : nextObject;\n    },\n    $unshift: function (value, nextObject, spec) {\n        invariantPushAndUnshift(nextObject, spec, '$unshift');\n        return value.length ? value.concat(nextObject) : nextObject;\n    },\n    $splice: function (value, nextObject, spec, originalObject) {\n        invariantSplices(nextObject, spec);\n        value.forEach(function (args) {\n            invariantSplice(args);\n            if (nextObject === originalObject && args.length) {\n                nextObject = copy(originalObject);\n            }\n            splice.apply(nextObject, args);\n        });\n        return nextObject;\n    },\n    $set: function (value, _nextObject, spec) {\n        invariantSet(spec);\n        return value;\n    },\n    $toggle: function (targets, nextObject) {\n        invariantSpecArray(targets, '$toggle');\n        var nextObjectCopy = targets.length ? copy(nextObject) : nextObject;\n        targets.forEach(function (target) {\n            nextObjectCopy[target] = !nextObject[target];\n        });\n        return nextObjectCopy;\n    },\n    $unset: function (value, nextObject, _spec, originalObject) {\n        invariantSpecArray(value, '$unset');\n        value.forEach(function (key) {\n            if (Object.hasOwnProperty.call(nextObject, key)) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                delete nextObject[key];\n            }\n        });\n        return nextObject;\n    },\n    $add: function (values, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$add');\n        invariantSpecArray(values, '$add');\n        if (type(nextObject) === 'Map') {\n            values.forEach(function (_a) {\n                var key = _a[0], value = _a[1];\n                if (nextObject === originalObject && nextObject.get(key) !== value) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.set(key, value);\n            });\n        }\n        else {\n            values.forEach(function (value) {\n                if (nextObject === originalObject && !nextObject.has(value)) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject.add(value);\n            });\n        }\n        return nextObject;\n    },\n    $remove: function (value, nextObject, _spec, originalObject) {\n        invariantMapOrSet(nextObject, '$remove');\n        invariantSpecArray(value, '$remove');\n        value.forEach(function (key) {\n            if (nextObject === originalObject && nextObject.has(key)) {\n                nextObject = copy(originalObject);\n            }\n            nextObject.delete(key);\n        });\n        return nextObject;\n    },\n    $merge: function (value, nextObject, _spec, originalObject) {\n        invariantMerge(nextObject, value);\n        getAllKeys(value).forEach(function (key) {\n            if (value[key] !== nextObject[key]) {\n                if (nextObject === originalObject) {\n                    nextObject = copy(originalObject);\n                }\n                nextObject[key] = value[key];\n            }\n        });\n        return nextObject;\n    },\n    $apply: function (value, original) {\n        invariantApply(value);\n        return value(original);\n    },\n};\nvar defaultContext = new Context();\nexports.isEquals = defaultContext.update.isEquals;\nexports.extend = defaultContext.extend;\nexports.default = defaultContext.update;\n// @ts-ignore\nexports.default.default = module.exports = assign(exports.default, exports);\n// invariants\nfunction invariantPushAndUnshift(value, spec, command) {\n    invariant(Array.isArray(value), function () { return \"update(): expected target of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(value) + \".\"; });\n    invariantSpecArray(spec[command], command);\n}\nfunction invariantSpecArray(spec, command) {\n    invariant(Array.isArray(spec), function () { return \"update(): expected spec of \" + stringifiable(command) + \" to be an array; got \" + stringifiable(spec) + \". \" +\n        \"Did you forget to wrap your parameter in an array?\"; });\n}\nfunction invariantSplices(value, spec) {\n    invariant(Array.isArray(value), function () { return \"Expected $splice target to be an array; got \" + stringifiable(value); });\n    invariantSplice(spec.$splice);\n}\nfunction invariantSplice(value) {\n    invariant(Array.isArray(value), function () { return \"update(): expected spec of $splice to be an array of arrays; got \" + stringifiable(value) + \". \" +\n        \"Did you forget to wrap your parameters in an array?\"; });\n}\nfunction invariantApply(fn) {\n    invariant(typeof fn === 'function', function () { return \"update(): expected spec of $apply to be a function; got \" + stringifiable(fn) + \".\"; });\n}\nfunction invariantSet(spec) {\n    invariant(Object.keys(spec).length === 1, function () { return \"Cannot have more than one key in an object with $set\"; });\n}\nfunction invariantMerge(target, specValue) {\n    invariant(specValue && typeof specValue === 'object', function () { return \"update(): $merge expects a spec of type 'object'; got \" + stringifiable(specValue); });\n    invariant(target && typeof target === 'object', function () { return \"update(): $merge expects a target of type 'object'; got \" + stringifiable(target); });\n}\nfunction invariantMapOrSet(target, command) {\n    var typeOfTarget = type(target);\n    invariant(typeOfTarget === 'Map' || typeOfTarget === 'Set', function () { return \"update(): \" + stringifiable(command) + \" expects a target of type Set or Map; got \" + stringifiable(typeOfTarget); });\n}\n"],"names":["exports","stringifiable","obj","isProduction","invariant","condition","message","hasOwnProperty","splice","toString","type","assign","target","source","getAllKeys","key","copy","object","Context","defaultCommands","x","y","value","directive","fn","$spec","_this","spec","nextObject","objectWasNextObject","nextValueForKey","nextObjectValue","invariantPushAndUnshift","originalObject","invariantSplices","args","invariantSplice","_nextObject","invariantSet","targets","invariantSpecArray","nextObjectCopy","_spec","values","invariantMapOrSet","_a","invariantMerge","original","invariantApply","defaultContext","module","command","specValue","typeOfTarget"],"mappings":"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","x_google_ignoreList":[0]}